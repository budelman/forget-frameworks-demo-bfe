/* =================================================================================================
Global styles
================================================================================================= */

// set up body and container padding/widths/etc ================================================== /
body { padding: 0 1em; margin: 0; }
.container { width: 100%; max-width: $max-width; margin: 0 auto; padding: 0; }
// do not use the row mixin for your container. the direct child selectors will bork everything


// declare non-grid-related styles for your elements ============================================= /
section div {
  padding: 1em 0;
}

.hero {
  height: $vertical-measure * 16;
  background-color: $gray60;
}

[role="banner"],
.partner-quotes,
.executive-team,
.offset-columns,
[role="contentinfo"] {
  background-color: $gray10;

  div {
    background-color: $gray30;
  }
}

[role="contentinfo"] {
  padding: 0.45em 0; // tweak to align contained elements to baseline
  text-align: center;

  p {
    margin: 0;
  }
}

@media screen and (min-width: 36em) {

  .partner-quotes,
  .executive-team,
  .offset-columns {
    @include row; // don't behave like rows until the viewport is wider than 36ems
    margin-bottom: $vertical-measure;
  }

  [role="banner"] {
    margin-bottom: $vertical-measure;
  }

  section div {
    padding: 1.8em 1em 0.93em 1em;
  }

  .hero {
    margin-bottom: $vertical-measure;
  }

  .partner-quotes {
    div {
      width: columns(1);
    }
    .twain {
      @include last;
    }
  }

  .executive-team {

    div {
      padding: 0;

      img {
        width: 100%;
        max-width: 100%;
      }
    }

    .ceo {
      width: columns(2);
    }

    .other-executives {
      width: columns(4);
      @include nesting;
      @include last;

      div {
        width: columns(1, 4);
        margin-right: gutter(4);
      }

      .cio {
        @include last;
      }
    }
  }

  .offset-columns {
    .first-offset {
      @include offset(left, 1);
      width: columns(1);
    }
    .second-offset {
      @include offset(right, 2);
      width: columns(2);
    }
  }
}